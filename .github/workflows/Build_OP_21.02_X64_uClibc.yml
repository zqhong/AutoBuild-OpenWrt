#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm
#=================================================

name: Build_OP_21.02_X64_uClibc

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
  push:
    tags:
      - '*'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-21.02
  DIFF_CONFIG_FILE: 'config/x64_21.02_uClibc.config'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Development environment initialization
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        rm -rf openwrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt

    - name: Update feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configuration Customization
      run: |
        [ -e $DIFF_CONFIG_FILE ] && mv $DIFF_CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig

    - name: Initialization environment variables
      working-directory: ./openwrt
      run: |
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "OPENWRT_VERSION=$(./scripts/getver.sh)" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Prepare artifact
      run: |
        mkdir -p ./artifact/firmware
        rm -rf $(find ./openwrt/bin/targets/ -type d -name "packages")
        cp -rf $(find ./openwrt/bin/targets/ -type f) ./artifact/firmware/

    - name: Deliver all
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_${{ env.OPENWRT_VERSION }}_${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ./openwrt/bin

    - name: Upload release asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifact/firmware/*
        tag: ${{ github.ref }}
        file_glob: true
